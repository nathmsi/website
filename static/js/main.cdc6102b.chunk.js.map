{"version":3,"sources":["components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","constants/routes.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Navigation/index.js","components/RealTimeDB/index.js","components/SignUp/Signup.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/SignIn.js","components/SignIn/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/index.js","components/layouts/NotFound.js","components/ListView/Card.js","components/ListView/ListCards.js","components/ListView/DatatablePage.js","components/Catalogue/index.js","components/Computes/index.js","components/Routes/index.js","components/Footer/index.js","components/App/index.js","registerServiceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","doSignInWithTwitter","twitterProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","doc","concat","users","collection","message","messages","computers","firebaseSyncState","path","state","base","syncState","app","initializeApp","serverValue","database","ServerValue","fieldValue","firestore","FieldValue","Rebase","createClass","GoogleAuthProvider","FacebookAuthProvider","TwitterAuthProvider","console","log","err","SignInButton","_ref","onClick","className","HOME","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","authUser","inherits","key","value","_this2","listener","onAuthStateChanged","setState","Session_context","Provider","withAuthorization","condition","WithAuthorization","apply","arguments","history","push","compose","withRouter","NavigationAuth","_ref2","toggleCollapse","closeCollapse","collapseID","mdbreact_esm","color","dark","expand","fixed","scrolling","href","id","isOpen","navbar","left","exact","to","ROUTES","right","SignOut","NavigationNonAuth","_ref3","SignOut_SignInButton","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","Home","loading","componentDidMount","_callee","regenerator_default","wrap","_context","prev","next","context","assertThisInitialized","asArray","stop","onChange","event","defineProperty","target","name","addItem","handleKeyUp","handleDeleteMessage","splice","_this$state","type","duration","md","icon","class","role","map","i","RealTimeDB_Message","label","group","onKeyUp","validate","error","success","gradient","rounded","Message","size","FormPage","passwordTwo","username","changeHandler","passwordOne","onSubmit","isLoading","containerClass","aria-hidden","react_router_dom","INITIAL_STATE","SignUpFormBase","then","set","_objectSpread","catch","alert","preventDefault","_this$state2","lg","Signup","SignUpLink","PasswordForgetFormBase","PasswordForget_objectSpread","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","handleGoogleSingIn","handleFacebookSingIn","handleTwitterSingIn","PasswordForget_PasswordForgetLink","fab","SignUp_SignUpLink","SignInFormBase","_isMounted","asyncToGenerator","mark","SignIn_objectSpread","undefined","_x","socialAuthUser","displayName","roles","additionalUserInfo","profile","SignIn","HomePage","PasswordChangeForm","PasswordChange_objectSpread","PasswordChange","AdminPage","on","snapshot","usersObject","val","usersList","keys","Admin_objectSpread","off","Admin_UserList","UserList","NotFound","Card","title","Description","cascade","src","tag","ListCard","reveal","ListView_Card","DatatablePage","data","striped","bordered","hover","entriesOptions","entries","pagesAmount","brand","price","modal","getData","SetModal","ListCards","toggle","frame","position","get","querySnapshot","columns","field","width","attributes","aria-controls","aria-label","sort","rows","docs","Date","getTime","toString","ListView_DatatablePage","Computes_AddElement","AddElement","Routes","react_router","component","RealTimeDB","openLoadingOverlay","closeLoadingOverlay","SignUp","components_SignIn","PasswordForget","Catalogue","Computes","components_Home","Account","Admin","render","Footer","getFullYear","prevState","window","scrollTo","overlay","style","backgroundColor","basename","components_Navigation","marginTop","components_Routes","components_Footer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","components_App","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cdc6102b.chunk.js","sourcesContent":["import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/firestore';\nimport Rebase from 're-base'\n\n\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n};\n\nclass Firebase {\n  constructor() {\n    try {\n      app.initializeApp(config);\n      this.serverValue = app.database.ServerValue;\n      this.fieldValue = app.firestore.FieldValue;\n      this.auth = app.auth();\n      this.db = app.firestore();\n\n      this.base = Rebase.createClass(app.database())\n\n      this.googleProvider = new app.auth.GoogleAuthProvider();\n      this.facebookProvider = new app.auth.FacebookAuthProvider();\n      this.twitterProvider = new app.auth.TwitterAuthProvider();\n      console.log('firebase connected ')\n    }\n    catch (err) {\n      console.log('error connection firebase => '+err)\n    }\n  }\n\n  // *** Auth API ***\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignInWithGoogle = () =>\n    this.auth.signInWithPopup(this.googleProvider);\n\n  doSignInWithFacebook = () =>\n    this.auth.signInWithPopup(this.facebookProvider);\n\n  doSignInWithTwitter = () =>\n    this.auth.signInWithPopup(this.twitterProvider);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doPasswordUpdate = password =>\n    this.auth.currentUser.updatePassword(password);\n\n\n\n  // *** User API ***\n  user = uid => this.db.doc(`users/${uid}`);\n  users = () => this.db.collection('users');\n\n  // *** Message API ***\n  message = uid => this.db.doc(`messages/${uid}`);\n  messages = () => this.db.collection('messages');\n\n  // *** Message API ***\n  computers = () => this.db.collection('computers');\n\n\n  // *** Real time DataBase ***\n  firebaseSyncState = (path, state) => this.base.syncState(path, state)\n\n\n\n\n\n\n\n\n\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React from 'react';\nimport { withFirebase } from '../Firebase';\n// import {\n//   MDBIcon\n// } from \"mdbreact\";\nconst SignOutButton = ({ firebase }) => (\n  // <div  onClick={firebase.doSignOut} >Sign Out</div>\n  // <MDBBtn color=\"primary\" onClick={firebase.doSignOut}  rounded>Primary</MDBBtn>\n  <div  onClick={firebase.doSignOut} className=\"d-none d-md-inline\">Sign Out</div>\n);\n\nconst SignInButton = () => (\n  <div>Sign In</div>\n);\n\nexport {\n  SignInButton\n}\n\n\nexport default withFirebase(SignOutButton);\n","export const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const RealTime = '/home';\nexport const HOME = '/';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\n\nexport const CATALOGUE = '/Catalogue';\nexport const COMPUTERS = '/Computers';","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: null,\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\n        authUser => {\n          authUser\n            ? this.setState({ authUser })\n            : this.setState({ authUser: null });\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\n        authUser => {\n          if (!condition(authUser)) {\n            this.props.history.push(ROUTES.SIGN_IN);\n          }\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\n\nimport {\n  MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink,\n  MDBNavbarToggler, MDBCollapse\n} from \"mdbreact\";\n\nimport SignOutButton from '../SignOut';\nimport { SignInButton } from '../SignOut';\n\nimport * as ROUTES from '../../constants/routes';\n\nimport { AuthUserContext } from '../Session';\n\nconst Navigation = ({ toggleCollapse, closeCollapse, collapseID }) => (\n  <div>\n    <AuthUserContext.Consumer>\n      {authUser =>\n        authUser ?\n          <NavigationAuth toggleCollapse={toggleCollapse} closeCollapse={closeCollapse} collapseID={collapseID} email={authUser.email} />\n          :\n          <NavigationNonAuth toggleCollapse={toggleCollapse} closeCollapse={closeCollapse} collapseID={collapseID} />\n      }\n    </AuthUserContext.Consumer>\n  </div>\n);\n\nconst NavigationAuth = ({ toggleCollapse, closeCollapse, collapseID, email }) => (\n  <MDBNavbar color=\"blue-gradient\" dark expand=\"md\" fixed=\"\" scrolling>\n    <MDBNavbarBrand href=\"/\" className=\"py-0 font-weight-bold\">\n      <strong className=\"align-middle\">Web Site</strong>\n    </MDBNavbarBrand>\n    <MDBNavbarToggler\n      onClick={toggleCollapse(\"mainNavbarCollapse\")}\n    />\n    <MDBCollapse\n      id=\"mainNavbarCollapse\"\n      isOpen={collapseID}\n      navbar\n    >\n      <MDBNavbarNav left>\n        <MDBNavItem>\n          <MDBNavLink\n            exact\n            to={ROUTES.HOME}\n            onClick={closeCollapse(\"mainNavbarCollapse\")}\n          >\n            <strong>Home</strong>\n          </MDBNavLink>\n        </MDBNavItem>\n        <MDBNavItem>\n          <MDBNavLink\n            exact\n            to={ROUTES.RealTime}\n            onClick={closeCollapse(\"mainNavbarCollapse\")}\n          >\n            <strong>Real time db</strong>\n          </MDBNavLink>\n        </MDBNavItem>\n        <MDBNavItem>\n          <MDBNavLink\n            exact\n            to={ROUTES.COMPUTERS}\n            onClick={closeCollapse(\"mainNavbarCollapse\")}\n          >\n            <strong>Computers</strong>\n          </MDBNavLink>\n        </MDBNavItem>\n        <MDBNavItem>\n          <MDBNavLink\n            exact\n            to={ROUTES.CATALOGUE}\n            onClick={closeCollapse(\"mainNavbarCollapse\")}\n          >\n            <strong>Catalogue</strong>\n          </MDBNavLink>\n        </MDBNavItem>\n      </MDBNavbarNav>\n      <MDBNavbarNav right>\n        <MDBNavItem >\n          <MDBNavLink\n            to={ROUTES.ACCOUNT}\n          >\n            {' ' + email}\n          </MDBNavLink>\n        </MDBNavItem>\n        <MDBNavItem >\n          <MDBNavLink\n            to={ROUTES.SIGN_IN}\n          >\n            <SignOutButton/>\n          </MDBNavLink>\n        </MDBNavItem>\n      </MDBNavbarNav>\n    </MDBCollapse>\n  </MDBNavbar>\n\n);\n\nconst NavigationNonAuth = ({ toggleCollapse, closeCollapse, collapseID }) => (\n  <MDBNavbar color=\"blue-gradient\" dark expand=\"md\" fixed=\"\" scrolling>\n    <MDBNavbarBrand href=\"/\" className=\"py-0 font-weight-bold\">\n      <strong className=\"align-middle\">Web Site</strong>\n    </MDBNavbarBrand>\n    <MDBNavbarToggler\n      onClick={toggleCollapse(\"mainNavbarCollapse\")}\n    />\n    <MDBCollapse\n      id=\"mainNavbarCollapse\"\n      isOpen={collapseID}\n      navbar\n    >\n      <MDBNavbarNav left>\n        <MDBNavItem>\n          <MDBNavLink\n            exact\n            to=\"/\"\n            onClick={closeCollapse(\"mainNavbarCollapse\")}\n          >\n            <strong>Home</strong>\n          </MDBNavLink>\n        </MDBNavItem>\n      </MDBNavbarNav>\n      <MDBNavbarNav right>\n        <MDBNavItem >\n          <MDBNavLink\n            to='/signin'>\n            <SignInButton />\n          </MDBNavLink>\n        </MDBNavItem>\n      </MDBNavbarNav>\n    </MDBCollapse>\n  </MDBNavbar>\n);\n\nexport default Navigation;\n\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nimport { MDBInput, MDBBtn, MDBListGroupItem, MDBContainer, MDBRow, MDBCol, MDBAnimation, MDBJumbotron, MDBIcon } from 'mdbreact';\n\nimport { withAuthorization } from '../Session';\n\nclass Home extends Component {\n\n  state = {\n    loading: true,\n    messages: [],\n    message: ''\n  }\n\n  componentDidMount = async () => {\n    this.props.firebase.firebaseSyncState('/messages', {\n      context: this,\n      state: 'messages',\n      asArray: true\n    })\n    this.setState({ loading: false })\n  }\n\n  componentWillUnmount() {\n\n  }\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n\n\n  addItem = () => {\n    if (this.state.message !== '') {\n      let messages = this.state.messages\n      messages.push(this.state.message)\n      this.setState({ messages, message: '' })\n    }\n  }\n\n  handleKeyUp = event => {\n    if (event.key === 'Enter') {\n      this.addItem()\n    }\n  }\n\n  handleDeleteMessage = (key) => {\n    let messages = this.state.messages\n    messages.splice(key, 1)\n    this.setState({ messages })\n  }\n\n  render() {\n    const { messages, message, loading } = this.state\n    return (\n      <MDBAnimation type=\"zoomIn\" duration=\"500ms\">\n        <MDBContainer>\n          <MDBRow>\n            <MDBCol md=\"12\" className=\"mt-3 mx-auto\">\n              <MDBJumbotron>\n                <h1 className=\"text-center\">\n                  <MDBIcon icon=\"window-restore\" className=\"indigo-text mr-2\" />\n                  Real Time Database {loading === true && <div class=\"spinner-border text-primary\" role=\"status\"><span class=\"sr-only\">Loading...</span> </div>}\n                </h1>\n                {\n                  loading === false &&\n                  \n                    <div class=\"row\">\n                      <div class=\"col\">\n                        {\n                          messages.map((message, i) => <Message key={i} handleDeleteMessage={this.handleDeleteMessage} i={i} message={message} />)\n                        }\n                      </div>\n                      <div class=\"col\">\n                      <MDBInput\n                      label=\"Your messsage\"\n                      group\n                      value={message}\n                      onChange={this.onChange}\n                      onKeyUp={this.handleKeyUp}\n                      type=\"text\"\n                      name=\"message\"\n                      validate\n                      error=\"wrong\"\n                      success=\"right\"\n                    />\n\n                    <div className=\"text-center mb-3\">\n                      <MDBBtn\n                        type=\"button\"\n                        gradient=\"blue\"\n                        rounded\n                        className=\"btn-block z-depth-1a\"\n                        onClick={this.addItem}>\n                        -add-message-\n                      </MDBBtn>\n                    </div>\n                      </div>\n                    </div>\n                }\n              </MDBJumbotron>\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n      </MDBAnimation>\n\n    );\n  }\n\n}\n\nconst Message = ({ handleDeleteMessage, message, i }) => (\n  <MDBListGroupItem className=\"d-flex justify-content-between align-items-center\">\n    {message}\n    <MDBBtn color=\"primary\" onClick={() => handleDeleteMessage(i)} size=\"sm\">\n      x\n    </MDBBtn>\n  </MDBListGroupItem>\n)\n\n\nconst condition = authUser => !!authUser\n\n\nexport default withFirebase(withAuthorization(condition)(Home));\n//export default withFirebase(Home);\n","import React from \"react\";\r\nimport { MDBModalFooter, MDBCard, MDBCardBody, MDBInput, MDBBtn } from 'mdbreact';\r\nimport { Link } from 'react-router-dom';\r\nimport '../SignIn/Signin.css'\r\nconst FormPage = ({ passwordTwo, username, changeHandler, passwordOne, email, onSubmit , isLoading }) => {\r\n    return (\r\n        <MDBCard>\r\n            <MDBCardBody className=\"mx-2\">\r\n                <div className=\"text-center\">\r\n                    <h3 className=\"dark-grey-text mb-5\">\r\n                        <strong>Register</strong>\r\n                    </h3>\r\n                </div>\r\n                <MDBInput\r\n                    label=\"Your username\"\r\n                    group\r\n                    value={username}\r\n                    onChange={changeHandler}\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    validate\r\n                    error=\"wrong\"\r\n                    success=\"right\"\r\n                />\r\n                <MDBInput\r\n                    label=\"Your email\"\r\n                    group\r\n                    value={email}\r\n                    onChange={changeHandler}\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    validate\r\n                    error=\"wrong\"\r\n                    success=\"right\"\r\n                />\r\n                <MDBInput\r\n                    label=\"Your password\"\r\n                    group\r\n                    value={passwordOne}\r\n                    onChange={changeHandler}\r\n                    type=\"password\"\r\n                    name=\"passwordOne\"\r\n                    validate\r\n                    containerClass=\"mb-0\"\r\n                />\r\n                <MDBInput\r\n                    label=\"Confirm Your password\"\r\n                    group\r\n                    value={passwordTwo}\r\n                    onChange={changeHandler}\r\n                    type=\"password\"\r\n                    name=\"passwordTwo\"\r\n                    validate\r\n                    containerClass=\"mb-0\"\r\n                />\r\n\r\n                <div className=\"text-center mb-3\">\r\n                    <MDBBtn\r\n                        type=\"button\"\r\n                        gradient=\"blue\"\r\n                        rounded\r\n                        className=\"btn-block z-depth-1a\"\r\n                        onClick={onSubmit}\r\n                    >\r\n                        {\r\n                            isLoading === false ?\r\n                                <strong>Register</strong>\r\n                                :\r\n                                <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                        }\r\n                    </MDBBtn>\r\n                </div>\r\n\r\n            </MDBCardBody>\r\n            <MDBModalFooter className=\"mx-5 pt-3 mb-1\">\r\n                <p>\r\n                    You have an account? <Link to='/signin'>Sign In</Link>\r\n                </p>\r\n            </MDBModalFooter>\r\n        </MDBCard>\r\n\r\n    )\r\n}\r\n\r\nexport default FormPage;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nimport Signup from './Signup'\n\nimport { MDBFreeBird, MDBCol, MDBRow, MDBCardBody } from 'mdbreact';\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n  isLoading : false \n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { username, email, passwordOne } = this.state;\n    this.setState({ isLoading : true })\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your Firebase realtime database\n        this.props.firebase\n          .user(authUser.user.uid)\n          .set({\n            username,\n            email,\n          })\n          .then(() => {\n            this.setState({ ...INITIAL_STATE });\n            this.setState({ isLoading : false })\n            this.props.history.push(ROUTES.HOME);\n          })\n          .catch(error => {\n            this.setState({ error });\n            this.setState({ isLoading : false })\n            alert(error.message)\n          });\n      })\n      .catch(error => {\n        this.setState({ error });\n        this.setState({ isLoading : false })\n        alert(error)\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      isLoading\n    } = this.state;\n\n\n    return (\n      <MDBFreeBird>\n        <MDBRow>\n          <MDBCol md=\"6\" lg=\"5\" className=\"mx-auto float-none white z-depth-1 py-2 px-2\">\n            <MDBCardBody>\n              <Signup passwordTwo={passwordTwo} username={username} passwordOne={passwordOne} email={email} changeHandler={this.onChange} onSubmit={this.onSubmit} isLoading={isLoading} />\n            </MDBCardBody>\n          </MDBCol>\n        </MDBRow>\n      </MDBFreeBird>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\n\nexport { SignUpLink };\n\nexport default withFirebase(SignUpFormBase)\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {  MDBCard,  MDBCardBody, MDBInput, MDBBtn } from 'mdbreact';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetPage = () => (\n  <div>\n    \n    <PasswordForgetForm />\n  </div>\n);\n\n\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  componentDidMount = () =>{\n    this.setState({\n      email : this.props.email\n    })\n  }\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n\n    return (\n      <MDBCard>\n        <MDBCardBody className=\"mx-2\">\n        <div className=\"text-center\">\n            <h3 className=\"dark-grey-text mb-5\">\n              <strong>Password Forget</strong>\n            </h3>\n          </div>\n          <MDBInput\n            label=\"Your Email\"\n            group\n            value={email}\n            onChange={this.onChange}\n            type=\"text\"\n            name=\"email\"\n            validate\n            error=\"wrong\"\n            success=\"right\"\n          />\n\n          <div className=\"text-center mb-3\">\n            <MDBBtn\n              type=\"button\"\n              gradient=\"blue\"\n              rounded\n              className=\"btn-block z-depth-1a\"\n              onClick={this.onSubmit}\n            >\n              Reset My Password\n          </MDBBtn>\n          </div>\n          {error && <p>{error.message}</p>}\n        </MDBCardBody>\n      </MDBCard>\n\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };\n","import React from \"react\";\r\nimport { MDBModalFooter, MDBCard, MDBCardBody, MDBInput, MDBBtn, MDBIcon } from 'mdbreact';\r\n//import './Signin.css'\r\n\r\nimport { SignUpLink } from '../SignUp';\r\nimport { PasswordForgetLink } from '../PasswordForget';\r\n\r\n\r\n\r\nconst FormPage = ({ onChange, password, email, onSubmit, handleGoogleSingIn, handleFacebookSingIn, handleTwitterSingIn, isLoading }) => {\r\n  return (\r\n    <MDBCard>\r\n      <MDBCardBody className=\"mx-2\">\r\n        <div className=\"text-center\">\r\n          <h3 className=\"dark-grey-text mb-5\">\r\n            <strong>Sign in</strong>\r\n          </h3>\r\n        </div>\r\n        <MDBInput\r\n          label=\"Your email\"\r\n          group\r\n          value={email}\r\n          onChange={onChange}\r\n          type=\"email\"\r\n          name=\"email\"\r\n          validate\r\n          error=\"wrong\"\r\n          success=\"right\"\r\n        />\r\n        <MDBInput\r\n          label=\"Your password\"\r\n          group\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={onChange}\r\n          validate\r\n          containerClass=\"mb-0\"\r\n        />\r\n        <PasswordForgetLink />\r\n        <div className=\"text-center mb-3\">\r\n          <MDBBtn\r\n            type=\"button\"\r\n            gradient=\"blue\"\r\n            rounded\r\n            onClick={onSubmit}\r\n            className=\"btn-block z-depth-1a\"\r\n          >\r\n            {\r\n              isLoading === false ?\r\n                <strong>Sign in</strong>\r\n                :\r\n                <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            }\r\n          </MDBBtn>\r\n        </div>\r\n        <p className=\"font-small dark-grey-text text-right d-flex justify-content-center mb-3 pt-2\">\r\n          or Sign in with:\r\n                   </p>\r\n        <div className=\"row my-3 d-flex justify-content-center\">\r\n          <MDBBtn\r\n            type=\"button\"\r\n            color=\"white\"\r\n            onClick={handleFacebookSingIn}\r\n            rounded\r\n            className=\"mr-md-3 z-depth-1a\"\r\n          >\r\n            <MDBIcon fab icon=\"facebook-f\" className=\"blue-text text-center\" />\r\n          </MDBBtn>\r\n          <MDBBtn\r\n            type=\"button\"\r\n            color=\"white\"\r\n            onClick={handleTwitterSingIn}\r\n            rounded\r\n            className=\"mr-md-3 z-depth-1a\"\r\n          >\r\n            <MDBIcon fab icon=\"twitter\" className=\"blue-text\" />\r\n          </MDBBtn>\r\n          <MDBBtn\r\n            type=\"button\"\r\n            color=\"white\"\r\n            onClick={handleGoogleSingIn}\r\n            rounded\r\n            className=\"z-depth-1a\"\r\n          >\r\n            <MDBIcon fab icon=\"google-plus-g\" className=\"blue-text\" />\r\n          </MDBBtn>\r\n        </div>\r\n      </MDBCardBody>\r\n      <MDBModalFooter className=\"mx-5 pt-3 mb-1\">\r\n        <SignUpLink />\r\n      </MDBModalFooter>\r\n    </MDBCard>\r\n  );\r\n};\r\n\r\nexport default FormPage;","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { MDBFreeBird, MDBCol, MDBRow, MDBCardBody } from 'mdbreact';\n\nimport SingIn from './SignIn'\n\n\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: '',\n  isLoading : false \n};\n\nclass SignInFormBase extends Component {\n\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n\n  onSubmit = async (event) => {\n    \n    const { email, password } = this.state;\n\n    this.setState({ isLoading : true })\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        if (this._isMounted === true) {\n          this.setState({ ...INITIAL_STATE });\n        }\n        this.setState({ isLoading : false })    \n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (this._isMounted === true) {\n          this.setState({ error })\n          this.setState({ isLoading : false })\n        }\n        \n        if (error.message !== undefined) {\n          alert(error.message)\n          this.setState({ isLoading : false })\n        }\n      })\n\n\n    event.preventDefault();\n  }\n\n  handleGoogleSingIn = event => {\n    this.setState({ isLoading : true })\n    this.props.firebase\n      .doSignInWithGoogle()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase\n          .user(socialAuthUser.user.uid)\n          .set({\n            username: socialAuthUser.user.displayName,\n            email: socialAuthUser.user.email,\n            roles: {},\n          });\n      })\n      .then(() => {\n        this.setState({ isLoading : false })\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        \n        if (this._isMounted === true) { \n          this.setState({ isLoading : false })\n          this.setState({ error });\n         }\n      });\n    event.preventDefault();\n  }\n\n  handleFacebookSingIn = event => {\n    this.setState({ isLoading : true })\n    this.props.firebase\n      .doSignInWithFacebook()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase\n          .user(socialAuthUser.user.uid)\n          .set({\n            username: socialAuthUser.additionalUserInfo.profile.name,\n            email: socialAuthUser.additionalUserInfo.profile.email,\n            roles: {},\n          });\n      })\n      .then(() => {\n        this.setState({ isLoading : false })\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        \n        if (this._isMounted === true) { \n          this.setState({ isLoading : false })\n          this.setState({ error }); \n        }\n      });\n    event.preventDefault();\n  };\n\n  handleTwitterSingIn = event => {\n    this.setState({ isLoading : true })\n    this.props.firebase\n      .doSignInWithTwitter()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase\n          .user(socialAuthUser.user.uid)\n          .set({\n            username: socialAuthUser.additionalUserInfo.profile.name,\n            email: socialAuthUser.additionalUserInfo.profile.email,\n            roles: {},\n          });\n      })\n      .then(() => {\n        this.setState({ isLoading : false })\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        \n        if (this._isMounted === true) { \n          this.setState({ error }); \n          this.setState({ isLoading : false })\n        }\n      });\n    \n    event.preventDefault();\n  };\n\n\n  onChange = event => {\n    if (this._isMounted === true) {\n      this.setState({ [event.target.name]: event.target.value });\n    }\n  };\n\n  render() {\n    const { email, password, error , isLoading } = this.state;\n    if (error !== '')\n      console.log(error)\n    return (\n      <MDBFreeBird>\n        <MDBRow>\n          <MDBCol md=\"6\" lg=\"5\" className=\"mx-auto float-none white z-depth-1 py-2 px-2\">\n            <MDBCardBody>\n              <SingIn password={password} email={email} onChange={this.onChange} onSubmit={this.onSubmit} isLoading={isLoading}\n                handleFacebookSingIn={this.handleFacebookSingIn} handleTwitterSingIn={this.handleTwitterSingIn} handleGoogleSingIn={this.handleGoogleSingIn} />\n            </MDBCardBody>\n          </MDBCol>\n        </MDBRow>\n      </MDBFreeBird>\n    )\n  }\n\n}\n\n\nexport default withFirebase(SignInFormBase)\n\n","import React from 'react';\n\n\nconst HomePage = () => (\n\n    <div className=\"mt-3 mb-5\">\n      <h1 className='text-center'>home</h1>\n      <h2 className='text-center'>Web Site</h2>\n    </div>\n \n);\n\n\nexport default HomePage\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\nimport {  MDBCard,  MDBCardBody, MDBInput, MDBBtn } from 'mdbreact';\n\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n\n    return (\n      <MDBCard>\n        <MDBCardBody className=\"mx-2\">\n          <div className=\"text-center\">\n            <h3 className=\"dark-grey-text mb-5\">\n              <strong>Change My Password</strong>\n            </h3>\n          </div>\n          <MDBInput\n            label=\"new password\"\n            group\n            value={passwordOne}\n            onChange={this.onChange}\n            type=\"text\"\n            name=\"passwordOne\"\n            validate\n            error=\"wrong\"\n            success=\"right\"\n          />\n          <MDBInput\n            label=\"confirm new password\"\n            group\n            value={passwordTwo}\n            onChange={this.onChange}\n            type=\"text\"\n            name=\"passwordTwo\"\n            validate\n            error=\"wrong\"\n            success=\"right\"\n          />\n\n          <div className=\"text-center mb-3\">\n            <MDBBtn\n              type=\"button\"\n              gradient=\"blue\"\n              rounded\n              className=\"btn-block z-depth-1a\"\n              onClick={this.onSubmit}\n            >\n              New Password\n          </MDBBtn>\n          </div>\n          {error && <p>{error.message}</p>}\n        </MDBCardBody>\n        {error && <p>{error.message}</p>}\n      </MDBCard>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from 'react';\n\nimport { AuthUserContext } from '../Session';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\nimport { withAuthorization } from '../Session';\nimport { MDBContainer, MDBRow, MDBCol , MDBCard , MDBCardBody } from \"mdbreact\";\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <MDBContainer className=\"mt-3\">\n        <MDBRow className=\"py-3\">\n          <MDBCol md=\"12\">\n            <MDBCard>\n              <MDBCardBody>\n                <PasswordForgetForm email={authUser.email} />\n                <PasswordChangeForm />\n              </MDBCardBody>\n            </MDBCard>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst authCondition = authUser => !!authUser;\n\nexport default withAuthorization(authCondition)(AccountPage);\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nclass AdminPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      users: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase.users().on('value', snapshot => {\n      const usersObject = snapshot.val();\n\n      const usersList = Object.keys(usersObject).map(key => ({\n        ...usersObject[key],\n        uid: key,\n      }));\n\n      this.setState({\n        users: usersList,\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    const { users, loading } = this.state;\n\n    return (\n      <div>\n        <h1>Admin</h1>\n\n        {loading && <div>Loading ...</div>}\n\n        <UserList users={users} />\n      </div>\n    );\n  }\n}\n\nconst UserList = ({ users }) => (\n  <ul>\n    {users.map(user => (\n      <li key={user.uid}>\n        <span>\n          <strong>ID:</strong> {user.uid}\n        </span>\n        <span>\n          <strong>E-Mail:</strong> {user.email}\n        </span>\n        <span>\n          <strong>Username:</strong> {user.username}\n        </span>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default withFirebase(AdminPage);\n","\r\nimport React  from \"react\";\r\n\r\nconst NotFound = ( ) =>{\r\n    return(\r\n       <h1 className='text-center'>Not Found error 404</h1>\r\n    )\r\n}\r\n\r\nexport default NotFound","import React from 'react';\r\nimport { MDBCard, MDBCardImage, MDBCardBody, MDBCardTitle, MDBCardText  , MDBBtn } from 'mdbreact';\r\n\r\nconst Card = ( { title , Description  , onSubmit} ) => {\r\n  return (\r\n    <MDBCard cascade className=\"my-3 grey lighten-4\">\r\n      <MDBCardImage\r\n        cascade\r\n        className=\"img-fluid\"\r\n        src=\"https://mdbootstrap.com/wp-content/uploads/2016/08/mdb.jpg\"\r\n      />\r\n      <MDBCardBody cascade className=\"text-center\">\r\n        <MDBCardTitle>\r\n          <strong>{title}</strong>\r\n        </MDBCardTitle>\r\n        <MDBCardText>\r\n          {Description}\r\n                              </MDBCardText>\r\n        <MDBBtn\r\n          tag=\"button\"\r\n          color=\"mdb-color\"\r\n          className=\"btn btn-outline-mdb-color btn-sm btn-rounded d-inline\"\r\n          onClick={onSubmit}\r\n        >\r\n          More\r\n                              </MDBBtn>\r\n      </MDBCardBody>\r\n    </MDBCard>\r\n  )\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport {\r\n    MDBCol,\r\n    MDBRow,\r\n    MDBAnimation,\r\n} from \"mdbreact\";\r\n\r\nimport Card from './Card'\r\n\r\nconst ListCard = ( { onSubmit } ) =>(\r\n            <MDBRow id=\"categories\">\r\n                <MDBCol md=\"4\">\r\n                    <MDBAnimation reveal type=\"fadeInLeft\">\r\n                        <Card title={'1'} Description={'qwerty'} onSubmit={onSubmit} />\r\n                    </MDBAnimation>\r\n                </MDBCol>\r\n                <MDBCol md=\"4\">\r\n                    <MDBAnimation reveal type=\"fadeInDown\">\r\n                        <Card title={'2'} Description={'qwerty'}  onSubmit={onSubmit} />\r\n                    </MDBAnimation>\r\n                </MDBCol>\r\n                <MDBCol md=\"4\">\r\n                    <MDBAnimation reveal type=\"fadeInLeft\">\r\n                        <Card title={'3'} Description={'qwerty'}  onSubmit={onSubmit} />\r\n                    </MDBAnimation> \r\n                </MDBCol>\r\n                <MDBCol md=\"4\">\r\n                    <MDBAnimation reveal type=\"fadeInDown\">\r\n                        <Card title={'4'} Description={'qwerty'}  onSubmit={onSubmit} />\r\n                    </MDBAnimation>\r\n                </MDBCol>\r\n                <MDBCol md=\"4\">\r\n                    <MDBAnimation reveal type=\"fadeInLeft\">\r\n                        <Card title={'5'} Description={'qwerty'}  onSubmit={onSubmit} />\r\n                    </MDBAnimation>\r\n                </MDBCol>\r\n            </MDBRow>\r\n)\r\n\r\nexport default ListCard;\r\n","import React from \"react\";\r\nimport { MDBDataTable, MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody } from \"mdbreact\";\r\n\r\nconst DatatablePage = ( { data } ) => {\r\n\r\n  return (\r\n    <MDBContainer className=\"mt-3\">\r\n      <MDBRow className=\"py-3\">\r\n        <MDBCol md=\"12\">\r\n            <MDBCard>\r\n              <MDBCardBody>\r\n                <MDBDataTable\r\n                  striped\r\n                  bordered\r\n                  hover\r\n                  entriesOptions={[2, 5]}\r\n                  entries={5}\r\n                  pagesAmount={4}\r\n                  data={data}\r\n                />\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n\r\n  );\r\n};\r\n\r\nexport default DatatablePage;\r\n","import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nimport { withAuthorization } from '../Session';\r\n\r\nimport { ListCards } from '../ListView'\r\n\r\nimport {\r\n    MDBContainer, MDBModal, MDBModalBody, MDBBtn\r\n} from \"mdbreact\";\r\n\r\nclass Home extends Component {\r\n\r\n    state = {\r\n        loading: false,\r\n        computers: [],\r\n        name: '',\r\n        brand: '',\r\n        price: '',\r\n        modal: false\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n\r\n    getData = () => {\r\n\r\n    }\r\n\r\n\r\n    onChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n\r\n\r\n    SetModal = () => {\r\n        this.setState({ modal: !this.state.modal });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <MDBContainer>\r\n                <h2 className=\"text-center my-5 font-weight-bold\">\r\n                    Why is it so great?\r\n                </h2>\r\n                <p className=\"text-center text-muted mb-1\">\r\n                    Google has designed a Material Design to make the web more\r\n                    beautiful and more user-friendly.\r\n                </p>\r\n                <p className=\"text-center text-muted mb-1\">\r\n                    Twitter has created a Bootstrap to support you in faster and\r\n                    easier development of responsive and effective websites.\r\n                </p>\r\n                <p className=\"text-center text-muted\">\r\n                    We present you a framework containing the best features of\r\n                    both of them - Material Design for Bootstrap.\r\n                </p>\r\n                <hr className=\"my-5\" />\r\n                <ListCards onSubmit={this.SetModal} />\r\n                <MDBModal\r\n                    isOpen={this.state.modal}\r\n                    toggle={this.SetModal}\r\n                    frame\r\n                    position=\"top\"\r\n                >\r\n                    <MDBModalBody className=\"text-center\">\r\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do\r\n                        eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                         <MDBBtn color=\"secondary\" onClick={this.SetModal}>\r\n                            Close\r\n                        </MDBBtn>\r\n                        <MDBBtn color=\"primary\">Save changes</MDBBtn>\r\n                    </MDBModalBody>\r\n                </MDBModal>\r\n\r\n            </MDBContainer>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst condition = authUser => !!authUser\r\n\r\nexport default withFirebase(withAuthorization(condition)(Home));\r\n","import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nimport { withAuthorization } from '../Session';\r\n\r\nimport { DatatablePage } from '../ListView'\r\n\r\nimport { MDBContainer, MDBRow, MDBCol, MDBJumbotron, MDBIcon, MDBAnimation, MDBInput, MDBBtn } from \"mdbreact\";\r\nclass Home extends Component {\r\n\r\n    state = {\r\n        loading: true,\r\n        computers: [],\r\n        name: '',\r\n        brand: '',\r\n        price: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n        //this.addItem()\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n\r\n    getData = () => {\r\n        this.props.firebase.computers().get()\r\n            .then(querySnapshot => {\r\n                const computers = querySnapshot.docs.map(doc => doc.data());\r\n                const data = {\r\n                    columns: [\r\n                        {\r\n                            label: \"Name\",\r\n                            field: \"name\",\r\n                            width: 150,\r\n                            attributes: {\r\n                                \"aria-controls\": \"DataTable\",\r\n                                \"aria-label\": \"Name\"\r\n                            }\r\n                        },\r\n                        {\r\n                            label: \"brand\",\r\n                            field: \"brand\",\r\n                            width: 270\r\n                        },\r\n                        {\r\n                            label: \"Price\",\r\n                            field: \"price\",\r\n                            sort: \"asc\",\r\n                            width: 100\r\n                        }\r\n                    ],\r\n                    rows: computers\r\n                }\r\n                this.setState({ computers: data });\r\n                this.setState({ loading: false });\r\n            });\r\n    }\r\n\r\n\r\n    onChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n\r\n\r\n    addItem = () => {\r\n        const { name, brand, price } = this.state\r\n        // Add a new document in collection \"cities\"\r\n        this.props.firebase.computers().doc(new Date().getTime().toString()).set({\r\n            name,\r\n            brand,\r\n            price\r\n        })\r\n            .then(() => {\r\n                console.log(\"Document successfully written!\");\r\n                this.getData()\r\n            })\r\n            .catch(function (error) {\r\n                console.error(\"Error writing document: \", error);\r\n            });\r\n    }\r\n\r\n    // handleKeyUp = event => {\r\n    //     if (event.key === 'Enter') {\r\n    //         this.addItem()\r\n    //     }\r\n    // }\r\n\r\n    // handleDeleteMessage = (key) => {\r\n    //     this.setState({ loading: true });\r\n    //     let messages = this.state.messages\r\n    //     messages.splice(key, 1)\r\n    //     this.setState({ messages })\r\n    //     this.setState({ loading: false });\r\n    // }\r\n\r\n    render() {\r\n        const { loading, computers, name, brand, price } = this.state\r\n        return (\r\n            <MDBAnimation type=\"zoomIn\" duration=\"500ms\">\r\n                <MDBContainer>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"12\" className=\"mt-3 mx-auto\">\r\n                            <MDBJumbotron>\r\n                                <h1 className=\"text-center\">\r\n                                    <MDBIcon icon=\"window-restore\" className=\"mr-2 indigo-text\" />\r\n                                    Computers {loading === true && <div class=\"spinner-border text-primary\" role=\"status\"><span class=\"sr-only\">Loading...</span> </div>}\r\n                                </h1>\r\n                                {\r\n                                    loading === false &&\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-9\">\r\n                                            <DatatablePage data={computers} />\r\n                                            </div>\r\n                                            <div class=\"col-3\">\r\n                                            <AddElement addItem={this.addItem} onChange={this.onChange} price={price} name={name} brand={brand} />\r\n                                            </div>\r\n                                        </div>\r\n                                }\r\n\r\n                            </MDBJumbotron>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n            </MDBAnimation>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst AddElement = ({ name, brand, price, onChange, addItem }) => (\r\n    <MDBContainer>\r\n        <MDBInput label=\"Name\" group value={name} onChange={onChange} type=\"text\" name=\"name\" />\r\n        <MDBInput label=\"brand\" group value={brand} onChange={onChange} type=\"text\" name=\"brand\" />\r\n        <MDBInput label=\"price\" group value={price} onChange={onChange} type=\"text\" name=\"price\" />\r\n        <MDBBtn\r\n            type=\"button\"\r\n            gradient=\"blue\"\r\n            rounded\r\n            onClick={addItem}\r\n            className=\"btn-block \"\r\n        >\r\n            Add New Computer\r\n                </MDBBtn>\r\n    </MDBContainer>\r\n)\r\n\r\n\r\n\r\n\r\n\r\nconst condition = authUser => !!authUser\r\n\r\nexport default withFirebase(withAuthorization(condition)(Home));\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\n\nimport RealTimeDB from '../RealTimeDB';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport PasswordForgetPage from '../PasswordForget';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\nimport NotFound from '../layouts/NotFound'\nimport Catalogue from '../Catalogue';\nimport Computes from '../Computes';\nimport * as ROUTES from '../../constants/routes';\n\nclass Routes extends React.Component {\n\n\n\n  render() {\n    return (\n        <Switch>\n          <Route exact path={ROUTES.RealTime} component={(props) => <RealTimeDB  {...props} openLoadingOverlay={this.props.openLoadingOverlay} closeLoadingOverlay={this.props.closeLoadingOverlay} />} />\n          <Route exact path={ROUTES.SIGN_UP} component={(props) => <SignUpPage {...props} openLoadingOverlay={this.props.openLoadingOverlay} closeLoadingOverlay={this.props.closeLoadingOverlay} />} />\n          <Route exact path={ROUTES.SIGN_IN} component={(props) => <SignInPage {...props} openLoadingOverlay={this.props.openLoadingOverlay} closeLoadingOverlay={this.props.closeLoadingOverlay} />} />\n          <Route exact path={ROUTES.PASSWORD_FORGET} component={(props) => <PasswordForgetPage {...props} openLoadingOverlay={this.props.openLoadingOverlay} closeLoadingOverlay={this.props.closeLoadingOverlay} />} />/>\n          <Route exact path={ROUTES.CATALOGUE} component={(props) => <Catalogue {...props} openLoadingOverlay={this.props.openLoadingOverlay} closeLoadingOverlay={this.props.closeLoadingOverlay} />} />/>\n          <Route exact path={ROUTES.COMPUTERS} component={(props) => <Computes {...props} openLoadingOverlay={this.props.openLoadingOverlay} closeLoadingOverlay={this.props.closeLoadingOverlay} />} />\n          <Route exact path={ROUTES.HOME} component={(props) => <HomePage {...props} openLoadingOverlay={this.props.openLoadingOverlay} closeLoadingOverlay={this.props.closeLoadingOverlay} />} />\n          <Route exact path={ROUTES.ACCOUNT} component={(props) => <AccountPage {...props} openLoadingOverlay={this.props.openLoadingOverlay} closeLoadingOverlay={this.props.closeLoadingOverlay} />} />\n          <Route exact path={ROUTES.ADMIN} component={(props) => <AdminPage {...props} openLoadingOverlay={this.props.openLoadingOverlay} closeLoadingOverlay={this.props.closeLoadingOverlay} />} />\n          <Route render={NotFound} />\n        </Switch>\n    );\n  }\n}\n\nexport default Routes;\n","\r\nimport React  from \"react\";\r\n\r\nimport {\r\n    MDBFooter,\r\n  } from \"mdbreact\";\r\n\r\nconst Footer = ( ) =>{\r\n    return(\r\n        <MDBFooter color=\"blue-gradient\">\r\n        <p className=\"footer-copyright mb-0 py-3 text-center\">\r\n          &copy; {new Date().getFullYear()} Copyright:\r\n          <a href=\"https://www.MDBootstrap.com\">  nathanmsika.com </a>\r\n        </p>\r\n      </MDBFooter>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { Component } from \"react\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport Navigation from '../Navigation';\nimport Routes from \"../Routes\";\n\nimport { withAuthentication } from '../Session';\nimport Footer from '../Footer'\n\n\nimport './App.css'\n\nclass App extends Component {\n\n  state = {\n    isLoading : false,\n    collapseID: \"\"\n  };\n\n\n\n  toggleCollapse = collapseID => () =>\n    this.setState(prevState => ({\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n    }));\n\n  closeCollapse = collapseID => () => {\n    window.scrollTo(0, 0);\n    this.state.collapseID === collapseID && this.setState({ collapseID: \"\" });\n  };\n\n  openLoadingOverlay = () => this.setState( { isLoading : true } )\n\n  closeLoadingOverlay = () => this.setState( { isLoading : false } )\n\n\n  \n\n  render() {\n\n    const overlay = (\n      <div\n        id=\"sidenav-overlay\"\n        style={{ backgroundColor: \"transparent\" }}\n        onClick={this.toggleCollapse(\"mainNavbarCollapse\")}\n      />\n    );\n\n    const { collapseID } = this.state;\n\n    return (\n      <HashRouter basename='/'>\n        <div className=\"flyout\">\n          <Navigation toggleCollapse={this.toggleCollapse} closeCollapse={this.closeCollapse} collapseID={collapseID}  />\n\n            {collapseID && overlay}\n            \n            <main style={{ marginTop: \"4rem\" }}>\n              <br/>                \n                          <Routes openLoadingOverlay={this.openLoadingOverlay} closeLoadingOverlay={this.closeLoadingOverlay} />               \n            </main>\n\n          <Footer />\n        </div>\n        </HashRouter>\n    );\n  }\n}\n\n\n\nexport default withAuthentication(App);\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nimport registerServiceWorker from './registerServiceWorker';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n        <App />\n    </FirebaseContext.Provider>\n    , document.getElementById('root'));\n\nregisterServiceWorker();"],"sourceRoot":""}